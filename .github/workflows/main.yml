
name: ReadMe Update

on:
  push:
      branches: [ main ]
  pull_request:
  # workflow_dispatch:

jobs:
  build-docs:
    runs-on: ubuntu-latest
    outputs:
      notebook-fpaths: ${{ steps.set-notebook-fpaths.outputs.notebook-fpaths }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install requirements
        run:
          # pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set ReadMe version as Github env var
        run: |
          README_VERSION=$(cat __version__)
          echo "README_VERSION=$README_VERSION" >> $GITHUB_ENV

      - id: get_branch
        uses: ConduitVC/action-get-branch@master

      - name: Test for API keys in docs
        run: |
          python scripts/detect_api_keys.py -d -p docs -s False

      - name: Update asset links
        run: |
          python scripts/update_asset_ref.py -d -p . -pn RelevanceAI -v ${{ steps.get_branch.outputs.branch }}

      - name: Update semver ref
        run: |
          python scripts/update_semver_ref.py -d -p . -pn RelevanceAI -v ${{ steps.get_branch.outputs.branch }}

      - name: Building docs from docs_template
        run: |
          python scripts/build_docs.py -d -p . -pn RelevanceAI -v $README_VERSION

      - id: set-notebook-fpaths
        name: Setting notebook fpath output
        run: echo "::set-output name=notebook-fpaths::$(find docs -type f -name "*.ipynb" | jq -Rsc '. / "\n" - [""]')"


  test-notebooks:
    name: Test ${{ matrix.notebook }}
    needs: build-docs
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest]
        python-version: [ '3.7' ]
        # python-version: [ '3.6', '3.7', '3.8', '3.9' ]
        notebook: ${{fromJSON(needs.build-docs.outputs.notebook-fpaths )}}
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          # - os: macos-latest
          #   path: ~/Library/Caches/pip
          # - os: windows-latest
          #   path: ~\AppData\Local\pip\Cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      # - name: Cache Python deps
      #   uses: actions/cache@v2
      #   with:
      #     path: ${{ matrix.path }}
      #     key: ${{ runner.os }}-${{ env.pythonLocation }}-pip-${{ hashFiles('colab_requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-${{ env.pythonLocation }}-pip-
      #       ${{ runner.os }}-${{ env.pythonLocation }}-

      - name: Install requirements
        run: |
          # pip install --upgrade pip
          pip install -r requirements.txt


      - name: Test notebooks
        env:
          TEST_ACTIVATION_TOKEN: ${{ secrets.TEST_ACTIVATION_TOKEN }}
        run: |
          README_VERSION=$(cat __version__)
          echo "README_VERSION=$README_VERSION" >> $GITHUB_ENV
          python scripts/test_notebooks.py -d -p . -pn RelevanceAI -v $README_VERSION --notebooks ${{ matrix.notebook }}



  sync-readme-docs:
    needs: test-notebooks
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest]
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          # - os: macos-latest
          #   path: ~/Library/Caches/pip
          # - os: windows-latest
          #   path: ~\AppData\Local\pip\Cache
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Sync ReadMe docs
        env:
          RELEVANCEAI_README_API_KEY: ${{ secrets.RELEVANCEAI_README_API_KEY }}
        run: |
          README_VERSION=$(cat __version__)
          echo "README_VERSION=$README_VERSION"
          ./scripts/sync_readme_docs.sh true $README_VERSION



  # update-readme-main:
  #   needs: sync-readme-docs
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ ubuntu-latest]
  #       include:
  #         - os: ubuntu-latest
  #           path: ~/.cache/pip
  #         # - os: macos-latest
  #         #   path: ~/Library/Caches/pip
  #         # - os: windows-latest
  #         #   path: ~\AppData\Local\pip\Cache
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #       cache: 'pip'

  #     - name: Sync ReadMe docs
  #       env:
  #         RELEVANCEAI_README_API_KEY: ${{ secrets.RELEVANCEAI_README_API_KEY }}
  #       run: |
  #         README_VERSION=$(cat __version__)
  #         echo "README_VERSION=$README_VERSION"
  #         ./scripts/sync_readme_docs.sh true $README_VERSION

